#lang racket

(require racket/gui sgl)

(provide game% draw-triangle)

(define game% (class object%
                (init-field [gamestate #f])
                (super-new)))

; draws a triangle
(define (draw-triangle)
  (gl-begin 'triangles)
  (gl-color 1 0 0)
  (gl-vertex 0 0 0)
  (gl-vertex 1 0 0)
  (gl-vertex 1 1 0)
  (gl-end)
  (gl-begin 'triangles)
  (gl-color 0 1 0)
  (gl-vertex 0 0 0)
  (gl-vertex 0 -1 0)
  (gl-vertex -1 -1 0)
  (gl-end)
  (gl-begin 'triangles)
  (gl-color 0 0 1)
  (gl-vertex 0 0 0)
  (gl-vertex 0 -1 0)
  (gl-vertex 1 -1 0)
  (gl-end)
  (gl-begin 'triangles)
  (gl-color 1 1 0)
  (gl-vertex 0 0 0)
  (gl-vertex 1 0 0)
  (gl-vertex 1 -1 0)
  (gl-end)
  (gl-begin 'triangles)
  (gl-color 0 1 1)
  (gl-vertex 0 0 0)
  (gl-vertex -1 0 0)
  (gl-vertex -1 -1 0)
  (gl-end)
  (gl-begin 'triangles)
  (gl-color 1 1 1)
  (gl-vertex 0 0 0)
  (gl-vertex -1 0 0)
  (gl-vertex -1 -1 0)
  (gl-end)
  )